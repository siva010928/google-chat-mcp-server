@startuml Google Chat MCP Server Authentication Flow

actor "User" as User
participant "Local Auth Server" as AuthServer
participant "Google OAuth" as GoogleOAuth
participant "Token Manager" as TokenManager
database "token.json" as TokenFile

title Authentication Flow

== Initial Authentication ==

User -> AuthServer: Navigate to http://localhost:8000/auth
AuthServer -> GoogleOAuth: Redirect to OAuth consent screen
note right: with access_type=offline and prompt=consent
User -> GoogleOAuth: Login and grant permissions
GoogleOAuth -> AuthServer: Callback with auth code
AuthServer -> GoogleOAuth: Exchange code for tokens
GoogleOAuth -> AuthServer: Return access_token and refresh_token
AuthServer -> TokenManager: Save tokens
TokenManager -> TokenFile: Write token.json

== Future API Requests ==

User -> FastMCP: Makes request through AI assistant
FastMCP -> TokenManager: Get credentials from token.json
note right: For each API request
TokenManager -> TokenFile: Load credentials
note right of TokenManager: Automatic refresh occurs when\naccess_token expires without\nrequiring user intervention
TokenManager --> FastMCP: Return valid credentials
FastMCP -> GoogleOAuth: Make API request with token

@enduml 